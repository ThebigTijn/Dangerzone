local function receiveEquipment(p:player) :: item:
    set {_i} to brush
    set name of {_i} to "&7Mop"
    set {_i} to {_i} with hide all itemflags
    set lore of {_i} to ""
    return {_i}

function janitorMenu(p:player):
    create a gui with virtual hopper inventory named "&8Janitor":
        set {_head} to (player head with nbt from "")
        format gui slot (0 and 4) with black stained glass pane named " "
        format gui slot 1 with green dye named "&a&lINFORMATION"
        format gui slot 2 with wooden hoe named "&b&lEQUIPMENT":
            {_p} has space for wooden hoe
            receiveEquipment({_p})
        format gui slot 3 with {_head} named "&c&lCLOSE":
            close (inventory of {_p})
        open gui to {_p}

local function janitorUpgrade(p:player):
    create a gui with virtual hopper inventory named (name of inventory of {_p}):
        set {_speedItem} to diamond named "&b&lSPEED"
        set {_multiItem} to gold ingot named "&a&lMULTI"
        format gui slot (0,2 and 4) with black stained glass pane named " "
        format gui slot 1 with {_speed}:
            upgradeStat({_p},"speed")
            format gui slot 1 with {_speed}
        format gui slot 3 with {_multi}:
            upgradeStat({_p},"multi")
            format gui slot 3 with {_multi}
        open gui to {_p}

local function changeStat(p:player,id:string):
    set (int tag "custom;%{_id}%" of nbt of {_p}) to (int tag "custom;%{_id}%" of nbt of {_p})+1

local function getPrice(p:player) :: int:
    set {_n} to (int tag "custom;%{_id}%" of nbt of {_p})
    set {_n} to ({_n}*50)+25
    return {_n}

local function upgradeStat(p:player,id:string):
    currencyGet({_p},"credits") >= getPrice({_p})
    changeStat({_p},{_id})

local function getReward(p:player):
    set {_r} to round(random number between 1 and 3,2)
    currencyAdd({_p},"credits",{_r})
    send "" to {_p}

local function showDMG(p:player,b:block):
    set {_blockDMG} to updateBlock({_b})
    make all players see damage of {_b} as {_blockDMG}
    {_blockDMG} >= 10
    resetBlock({_b})
    createBlock({_b})
    getReward({_p})

local function updateBlock(b:block) :: int:
    set (metadata tag "janitorDMG" of {_b}) to (metadata tag "janitorDMG" of {_b})+1
    return (metadata tag "janitorDMG" of {_b})

local function resetBlock(b:block):
    make all players see damage of {_b} as 0
    delete (metadata tag "janitorDMG" of {_b})
    delete (string tag "custom;janitorDirt" of nbt of {_b})

local function createBlock(b:block):
    set block at {janitor.nextdirt} to brown carpet
    set (string tag "custom;janitorDirt" of nbt of {_b}) to "true"
    set {janitor.nextdirt} to {_b}
    set block within {_b} to air

on brush:
    (string tag "custom;janitorDirt" of nbt of event-block) = "true"
    showDMG(player,event-block)

on place:
    (string tag "custom;janitorDirt" of nbt of event-item) = "true"
    createBlock(event-block)

on break:
    (string tag "custom;janitorDirt" of nbt of event-item) = "true"
    deleteBlock(event-block)