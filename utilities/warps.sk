on load:
	load yaml "plugins/Skript/yaml/utilities/warps.yml" as "warps"

function createWarp(n: text,l: location):
	set yaml value "%{_n}%.location" from "warps" to {_l}
	save yaml "warps"

function deleteWarp(n: text):
	delete yaml value "%{_n}%.location" from "warps"
	save yaml "warps"

function returnWarp(n: text) :: location:
	return yaml value "%{_n}%.location" from "warps"

command /warp <text> [<text>]:
	permission: skript.warp
	trigger:
		if arg-1 is "set":
			arg-2 is set
			arg-2 != "set", "delete"
			createWarp(arg-2,player's location)
			message "<##E34234>&lSYSTEM &7» &7Succesfully created Warp <##E34234>%arg-2%"
		else if arg-1 is "delete":
			arg-2 is set
			deleteWarp(arg-2)
			message "<##E34234>&lSYSTEM &7» &7Deleted Warp <##E34234>%arg-2%"
		else:
			"%all yaml nodes of "warps"%" contains arg-1
			player has permission "skript.warp.%arg-1%"
			warpPlayer(player,arg-1)
			
function warpPlayer(p: player,w: text):
	teleport {_p} to returnWarp({_w})
	message "<##E34234>&lSYSTEM &7» Succesfully Warped to <##E34234>%{_w}%" to {_p}


on tab complete of "warp":
    set tab completions for position 1 to "set" and "delete" and (yaml node keys "" from "warps")

local function autoWarp(p:player):
	set {_list::*} to "ci","goc","sd","mtf","scd" and "isd"
	loop {_list::*}:
		{_p} has permission "spawn.%loop-value%"
		set {_value} to loop-value
		exit loop
	if {_value} is not set:
		warpPlayer({_p},"class-d")
		stop
	warpPlayer({_p},"%{_value}%-spawn")

on join:
	wait 4 ticks
	autoWarp(player)

on death:
	wait 4 ticks
	autoWarp(victim)