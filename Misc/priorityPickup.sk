local function addAttacker(p:player,pl:player):
    add (uuid of {_pl}) to {-attackers.%uuid of {_p}%::*}

local function removeAttacker(p:player):
    set {_u} to (uuid of {_p})
    loop {-attackers.%{_u}%::*}:
        delete {-hits.%loop-value%.%{_u}%}
    delete {-attackers.%{_u}%::*}

local function getHits(p:player):
    set {_u} to (uuid of {_p})
    loop {-attackers.%{_u}%::*}:
        add {-hits.%loop-value%.%{_u}%} to {_nums::*}

local function getHighestHits(p:player):
    getHits({_p})
    set {_highest} to max({_nums::*})
    set {_u} to (uuid of {_p})
    loop {-attackers.%{_u}%::*}:
        {-hits.%loop-value%.%{_u}%} = {_highest}
        set {_pl} to loop-value
        set (string tag "priority-%uuid of {_p}%" of nbt compound from {_pl}) to "true"
        removeAttacker({_p})
        stop

local function priority(p:player):
    

on damage:
    if {-attackers.%uuid of victim%::*} does not contain (uuid of attacker):
        addAttacker(victim,attacker)
    add 1 to {-hits.%uuid of attacker%.%uuid of victim%}

on death:
    getHighestHits(victim)