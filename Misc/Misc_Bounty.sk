function bountyMenu(p:player,page:int):
    set {_minIndex} to (({_page}*28)-28)+1
    set {_maxIndex} to ({_page}*28)
    set {_list::*} to (elements from {_minIndex} to {_maxIndex} of {global.bounty::*})
    create a gui with virtual chest inventory with 6 rows named "&8Bounty (Page: %{_page}%)":
        set {_n} to 0
        loop 2 times:
            format gui slot (numbers between {_n} and ({_n}+8)) with black stained glass pane named " "
            add 45 to {_n}
        set {_n} to 9
        loop 4 times:
            format gui slot {_n} and ({_n}+8) with black stained glass pane named " "
            add 9 to {_n}
        loop {_list::*}:
            format next gui slot with (skull of loop-value) named "&7%loop-value%" with lore "&fValue: &6$%format(tag "custom;Bounty.Value" of nbt compound from loop-value)%"
        format gui slot 47 with arrow named "&6%font("previous")%" with lore "", "&7Flipping back, retracing steps", "&7through the narrative's labyrinth.", "", "&8→ <##E5E4E2>&lCLICK HERE &8←", "":
            bountyMenu({_p},{_page}-1) if {_page} > 1
        format gui slot 51 with arrow named "&6%font("next")%" with lore "", "&7Turning the page, embarking on the", "&7next chapter of the adventure.", "", "&8→ <##E5E4E2>&lCLICK HERE &8←", "":
            bountyMenu({_p},{_page}+1) if {_list::%{_maxIndex}+1%} is set
        format gui slot 49 with green dye named "&a&lINFORMATION" with lore "&8%font("bounty")%", "", "&7Collecting bounties, the thrill of the hunt,", "&7the satisfaction of the kill.", ""
        format gui slot 48 with beacon named "&b&lRANDOM BOUNTY" with lore "&8%font("bounty")%", "", "&7Claim a random bounty,", "&7earn &a$100 &7for their death", "", "&8→ <##E5E4E2>&lCLICK HERE &8←", "":
            bountyRandom(player)
        set {_head} to player head with nbt from "{SkullOwner:{Id:[I;-1608379259,225986527,-1647478978,-1362862659],Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNzZjMGQwNDU5YzY3ZjJiZTgyZmJlNTQwNmFiOGQxMzc4ZGExZjI4ZjdhM2Y4MmYxZGZjNDc2MTVhOTU1YTcifX19""}]}}}"
        format gui slot 50 with {_head} named "&c&lCLOSE" with lore "&8%font("bounty")%", "", "&7With a playful flick, they closed the lid,", "&7sealing away secrets and surprises for another day.", "", "&8→ <##E5E4E2>&lCLICK HERE &8←", "":
            close inventory of {_p}
        open gui to {_p}

function bountySet(p:offlineplayer,n:num):
    moneyRemove({_p},{_n})
    set (tag "custom;Bounty" of nbt compound from {_p}) to (tag "custom;Bounty" of nbt compound from {_p})+{_n}
    {global.bounty::*} does not contain
    add {_p} to {global.bounty::*}

command bounty [<offlineplayer>] [<num>]:
    trigger:
        if arg-1 is not set:
            bountyMenu(player,1)
            stop
        arg-2 is set
        if moneyGet(player) < arg-2:
            send "<##E34234>&lSYSTEM &7» Insufficient Funds" to {_p}
            stop
        bountySet(arg-1,arg-2)
        send "<##E34234>&lSYSTEM &7» Bounty of &f%arg-1% &7has updated to &a$%format(tag "custom;Bounty.Value" of nbt compound from arg-1)%" to {_p}

on tab complete of "/bounty":
    set tab completion for position 1 to all offline players

function getRandomUser(p:player):
    close inventory of {_p}
    loop all players where [input is online]:
        if loop-value = {_p}:
            send "<##E34234>&lSYSTEM &7» Nobody can be your bounty at the current moment, try again later!" to {_p}
            stop
        set (metadata tag "Bounty.Target" of {_p}) to uuid of loop-value
        set (metadata tag "Bounty.Hunter" of loop-value) to uuid of {_p}

function randomBounty(p:player):
    if (metadata tag "Bounty.Target" of {_p}) is set:
        send "<##E34234>&lSYSTEM &7» Random bounty has already been activated." to {_p}
        stop
    getRandom({_p})
    set {_metadataTag} to (metadata tag "Bounty.Target" of {_p}) parsed as player
    send "<##E34234>&lSYSTEM &7» Bounty is &f%{_metadataTag}%" to {_p}
    send title "&b&l%font("you are being hunted")%" with subtitle "&7By: %{_p}%" to {_metadataTag}

on death of player:
    attacker is a player
    if (metadata tag "Bounty.Hunter" of victim) = uuid of attacker:
        moneyAdd(attacker,100)
        send "<##E34234>&lSYSTEM &7» Bounty Claimed, +&a$100" to attacker
        delete (metadata tag "Bounty.Hunter" of victim)
        delete (metadata tag "Bounty.Target" of attacker)
    (tag "custom;Bounty.Value" of nbt compound from victim) is set
    set {_nbtTag} to (tag "custom;Bounty.Value" of nbt compound from victim)
    delete tag (tag "custom;Bounty" of nbt compound from victim)
    remove victim from {global.bounty::*}
    send "<##E34234>&lSYSTEM &7» Bounty of &f%victim% &7collected, &8[&a+$%format(tag "custom;Bounty.Value" of nbt compound from victim)%&8]" to attacker
    moneyAdd(attacker,{_nbtTag})

on quit:
    if (metadata tag "Bounty.Hunter" of player) is set:
        set {_pl} to (metadata tag "Bounty.Hunter" of player) parsed as a player
        send "<##E34234>&lSYSTEM &7» Bounty has left, &8[&a+$50&8]" to {_pl}
        moneyAdd({_pl},50)
        delete (metadata tag "Bounty.Hunter" of player)
        delete (metadata tag "Bounty.Target" of {_pl})
    if (metadata tag "Bounty.Target" of player) is set:
        send "<##E34234>&lSYSTEM &7» Bounty hunter has left." to player
        delete (metadata tag "Bounty.Hunter" of player)
        delete (metadata tag "Bounty.Target" of (metadata tag "Bounty.Hunter" of player))