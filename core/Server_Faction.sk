#OLD CODE W/ BUGS, WILL BE RECODED

function clanView(p: player):

    send "<##E34234>&lSYSTEM &7» You are not in a clan" to {_p} if (metadata tag "Clan_Name" of {_p}) is not set
    (metadata tag "Clan_Name" of {_p}) is set

    create a gui with virtual chest inventory with 6 rows named "&8&l%font(metadata tag "Clan_Name" of {_p})%":

        set {_slot} to 9
        loop 4 times:

            format gui slot {_slot} and ({_slot} + 8) with black stained glass pane named ""
            add 9 to {_slot}
        
        set {_slot} to 0
        set {_slot2} to 8

        loop 2 times:
            format gui slot (integers between {_slot} and {_slot2}) with black stained glass pane named ""
            add 45 to {_slot} and {_slot2}

        format gui slot 40 with beacon named "overview"
        format gui slot (integers between 20 and 24) with gray dye named " "

    open last gui to {_p}


function clanCreate(p: player, t: string):
    
    #CHECK IF PLAYER IS IN A CLAN
    send "<##E34234>&lSYSTEM &7» Disband your clan to make another" to {_p} if (metadata tag "Clan_Name" of {_p}) is set
    (metadata tag "Clan_Name" of {_p}) is not set

    #CHECK IF NAME OF CLAN IS ALREADY TAKEN
    send "<##E34234>&lSYSTEM &7» Clan &f%{_t}% &7is already taken" to {_p} if {clan::%{_t}%::members::*} is set
    {clan::%{_t}%::members::*} is not set

    #CHECK IF NAME OF CLAN IS < 16 CHARACTERS
    send "<##E34234>&lSYSTEM &7» Clan name cannot be longer than 16 characters" to {_p} if length of {_t} > 16
    length of {_t} <= 16

    #PROCEDURE FOR CLAN LEADER
    add {_p} to {clan::%{_t}%::members::*}
    set (metadata tag "Clan_Leader" of {_p}) to {_p}
    set (metadata tag "Clan_Name" of {_p}) to {_t}

    #SEND CONFIRMATION & OPEN CLAN GUI
    send "<##E34234>&lSYSTEM &7» Clan named &f%{_t}% &7has been created" to {_p}
    clanView({_p})



function clanDisband(p: player, t: string):

    #CHECK IF THAT IS PLAYER'S CLAN
    send "<##E34234>&lSYSTEM &7» That is not your clan" to {_p} if {_t} != (metadata tag "Clan_Name" of {_p})
    {_t} = (metadata tag "Clan_Name" of {_p})

    #CHECK IF CLAN EXISTS AND THAT PLAYER IS LEADER
    clanChecks({_p})
    {clan::%{_t}%::members::*} is set

    #CONFIRMATION AND DELETION
    delete (metadata tag "Clan_Name" of {_p})
    delete (metadata tag "Clan_Leader" of {_p})
    delete {clan::%{_t}%::members::*}
    send "<##E34234>&lSYSTEM &7» Disbanded Clan &f%{_t}%" to {_p}



function clanChecks(p: player):

    #CHECK IF PLAYER IS IN CLAN
    send "<##E34234>&lSYSTEM &7» You are not in a clan" to {_p} if (metadata tag "Clan_Name" of {_p}) is not set
    (metadata tag "Clan_Name" of {_p}) is set

    #CHECK IF PLAYER IS LEADER OF CLAN
    send "<##E34234>&lSYSTEM &7» Must be the clan leader to proceed with this action" to {_p} if {_p} != (metadata tag "Clan_Leader" of {_p})
    {_p} = (metadata tag "Clan_Leader" of {_p})



function clanRename(p: player, t: string):

    clanChecks({_p})

    #CHECK IF NAME OF CLAN IS ALREADY TAKEN
    send "<##E34234>&lSYSTEM &7» Clan &f%{_t}% &7is already taken" to {_p} if {clan::%{_t}%::members::*} is set
    {clan::%{_t}%::members::*} is not set

    #CHECK IF LENGTH OF CLAN NAME IS < 16
    send "<##E34234>&lSYSTEM &7» Clan name cannot be longer than 16 characters" to {_p} if length of {_t} > 16
    length of {_t} <= 16

    #TRANSFER PLAYERS FROM OLD CLAN TO NEW, CONFIRMATION MESSAGE
    set {clan::%{_t}%::members::*} to {clan::%metadata tag "Clan_Name" of {_p}%::members::*}
    set (metadata tag "Clan_Name" of {_p}) to {_t}
    send "<##E34234>&lSYSTEM &7» Clan has been renamed to &f%{_t}%" to {_p}



function clanKick(p: player, t: string):

    clanChecks({_p})
    set {_t} to {_t} parsed as player

    #CHECK IF TARGET IS IN CLAN
    send "<##E34234>&lSYSTEM &7» Target is not in your clan" to {_p} if {clan::%metadata tag "Clan_Name" of {_p}%::members::*} does not contain {_t}
    {clan::%metadata tag "Clan_Name" of {_p}%::members::*} contains {_t}

    #CHECK IF TARGET = HIMSELF
    send "<##E34234>&lSYSTEM &7» Silly, you cannot kick yourself" to {_p} if {_t} = {_p}
    {_t} != {_p}

    #REMOVE PLAYER FROM CLAN AND SEND CONFIRMATION
    remove {_t} from {clan::%metadata tag "Clan_Name" of {_p}%::members::*}
    send "<##E34234>&lSYSTEM &7» You have been kicked from clan &f%metadata tag "Clan_Name" of {_p}%" to {_t}
    delete (metadata tag "Clan_Name" of {_p})

    #SEND CONFIRMATION TO ALL CLAN MEMBERS
    loop {clan::%metadata tag "Clan_Name" of {_p}%::*}:
        send "<##E34234>&lSYSTEM &7» %{_t}% has been kicked from the clan" to loop-value parsed as player



function clanInvite(p: player, t: string):

    clanChecks({_p})
    set {_clan} to (metadata tag "Clan_Name" of {_p})

    #CHECK CLAN SIZE
    send "<##E34234>&lSYSTEM &7» Clan is full" to {_p} if size of {clan::%{_clan}%::members::*} > 5
    size of {clan::%{_clan}%::members::*} <= 5

    #CHECK IF TARGET IS ALREADY IN CLAN
    send "<##E34234>&lSYSTEM &7» Player is already in your clan" to {_p} if {clan::%{_clan}%::members::*} contains {_t}
    {clan::%{_clan}%::members::*} does not contain {_t}

    #CHECK IF PLAYER IS TARGET
    send "<##E34234>&lSYSTEM &7» Silly, you cannot invite yourself to your clan" to {_p} if {_t} = {_p}
    {_t} != {_p}

    set {_t} to {_t} parsed as player

    #CHECK IF TARGET IS ONLINE
    send "<##E34234>&lSYSTEM &7» &f%{_t} ? "Target"% &7is not online" to {_p} if {_t} is not online
    {_t} is online

    #SET TARGET TO PLAYER WHO IS INVITED BY LEADER, ADD CLAN TO INVITATIONS OF PLAYER
    set (metadata tag "Clan_InvitedPlayer" of {_p}) to {_t}
    add {_clan} to {-clan::%uuid of {_t}%::invitations::*}

    #CONFIRMATION MSGS
    send "<##E34234>&lSYSTEM &7» &f%{_t}% &7has been invited to your clan" to {_p}
    send "<##E34234>&lSYSTEM &7» You have been invited to clan &f%{_clan}%, <cmd:/clan accept %{_clan}%>&8[&b&lCLICK HERE&8]<reset> &7to accept!" to {_t}



function clanInviteAccept(p: player, t: string):

    #CHECK IF PLAYER HAS BEEN INVITED TO CLAN
    send "<##E34234>&lSYSTEM &7» You have not been invited to this clan" to {_p} if {-clan::%uuid of {_t}%::invitations::*} does not contain {_t}
    {-clan::%uuid of {_t}%::invitations::*} contains {_t}

    #CHECK CLAN SIZE
    send "<##E34234>&lSYSTEM &7» Clan is full" to {_p} if size of {clan::%{_t}%::members::*} > 5
    size of {clan::%{_t}%::members::*} <= 5

    #CONFIRMATION MSGS
    send "<##E34234>&lSYSTEM &7» Accepted invite, joined clan &f%{_t}%" to {_p}
    loop {clan::%{_t}%::members::*}:
        send "<##E34234>&lSYSTEM &7» %{_p}% has joined the clan" to loop-value parsed as player

    #ADD PLAYER TO CLAN
    add {_p} to {clan::%{_t}%::members::*}
    remove {_t} from {-clan::%uuid of {_t}%::invitations::*}



function clanInviteDecline(p: player, t: string):

    #CHECK IF PLAYER HAS BEEN INVITED TO CLAN
    send "<##E34234>&lSYSTEM &7» You have not been invited to this clan" to {_p} if {-clan::%uuid of {_t}%::invitations::*} does not contain {_t}
    {-clan::%uuid of {_t}%::invitations::*} contains {_t}

    #CONFIRMATION MSGS
    send "<##E34234>&lSYSTEM &7» Declined Invitation" to {_p}
    remove {_t} from {-clan::%uuid of {_t}%::invitations::*}



command clan <string> [<string>]:
    trigger:
        clanView(player) if arg-1 = "view"
        clanCreate(player, arg-2) if arg-1 = "create"
        clanDisband(player, arg-2) if arg-1 = "disband"
        clanRename(player, arg-2) if arg-1 = "rename"
        clanKick(player, arg-2) if arg-1 = "kick"
        clanInvite(player, arg-2) if arg-1 = "invite"
        clanInviteAccept(player, arg-2) if arg-1 = "accept"
        clanInviteDecline(player, arg-2) if arg-1 = "decline"
        send {-clan::%uuid of player%::invitations::*} to player if arg-1 = "invitations"



on tab complete of "/clan":
    set tab completions for position 1 to "create", "view", "disband", "rename", "kick", "invite", "accept", "decline", "invitations"
    set tab completions for position 2 to (indexes of {-clan::%uuid of player%::invitations::*}) and all players